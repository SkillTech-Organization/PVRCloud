<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FTLApi</name>
    </assembly>
    <members>
        <member name="M:FTLApi.FTLApiController.FTLSupport(FTLApi.DTO.Request.FTLSupportRequest)">
            <summary>
            Calculate by FTLSupporter engine
            </summary>
            <param name="body"></param>
            <param name="maxTruckDistance"></param>
            <returns></returns>
        </member>
        <member name="M:FTLApi.FTLApiController.Result(System.String)">
            <summary>
            Get calculation result
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:FTLApi.FTLApiController.FTLSupportX(FTLApi.DTO.Request.FTLSupportRequest)">
            <summary>
            Calculate by FTLSupporterX engine
            </summary>
            <param name="body"></param>
            <param name="maxTruckDistance"></param>
            <returns></returns>
        </member>
        <member name="M:FTLApi.FTLApiController.IsAlive">
            <summary>
            get the 'isalive' status of the FTLSupporter service
            </summary>
            <returns></returns>
        </member>
        <member name="M:FTLApi.Handlers.IFTLApiHandler.FTLSupportAsync(FTLApi.DTO.Request.FTLSupportRequest,System.Threading.CancellationToken)">
            <summary>
            Calculate by FTLSupporter engine
            </summary>
            <param name="body"></param>
            <param name="content_Type"></param>
            <param name="accept"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:FTLApi.Handlers.IFTLApiHandler.Result(System.String)">
            <summary>
            Get calculation result
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:FTLApi.Handlers.IFTLApiHandler.FTLSupportXAsync(FTLApi.DTO.Request.FTLSupportRequest,System.Threading.CancellationToken)">
            <summary>
            Calculate by FTLSupporterX engine
            </summary>
            <param name="body"></param>
            <param name="content_Type"></param>
            <param name="accept"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:FTLApi.Handlers.IFTLApiHandler.IsAliveAsync(System.Threading.CancellationToken)">
            <summary>
            get the 'isalive' status of the FTLSupporter service
            </summary>
            <param name="accept"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
    </members>
</doc>
